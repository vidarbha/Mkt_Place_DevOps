AWSTemplateFormatVersion: '2010-09-09'
Resources:
 
 myVPC:
  Type: AWS::EC2::VPC
  Properties:
   CidrBlock: 10.0.0.0/16
   #EnableDnsSupport: 'yes'
   #EnableDnsHostnames: 'yes'
   #InstanceTenancy: dedicated
   Tags:
    - Key: Application
      Value: 
       Ref: AWS::StackId
    - Key: Name
      Value: MyVpc
 
 InternetGateway:
  Type: AWS::EC2::InternetGateway
  Properties:
   Tags:
    - Key: Application
      Value:
       Ref: AWS::StackId
    - Key: Name
      Value: MyIGW
 
 AttachGateway:
  Type: AWS::EC2::VPCGatewayAttachment
  Properties:
   VpcId: !Ref myVPC
   InternetGatewayId: !Ref InternetGateway
 
 NetworkAcl:
  Type: AWS::EC2::NetworkAcl
  Properties:
   VpcId: !Ref myVPC
   Tags:
    - Key: Application
      Value:
       Ref: AWS::StackId
    - Key: Name
      Value: myNACL   
 
 InboundHTTPNetworkAclEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref NetworkAcl
   RuleNumber: '100'
   Protocol: '6'
   RuleAction: allow
   Egress: 'false'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '80'
    To: '80'
  
 InboundSSHNetworkAclEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref NetworkAcl
   RuleNumber: '110'
   Protocol: '6'
   RuleAction: allow
   Egress: 'false'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '22'
    To: '22'
 
 InboundResponsePortsNetworkAclEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref NetworkAcl
   RuleNumber: '120'
   Protocol: '6'
   RuleAction: allow
   Egress: 'false'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '1024'
    To: '65535'
 
 OutBoundHTTPNetworkAclEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref NetworkAcl
   RuleNumber: '100'
   Protocol: '6'
   RuleAction: allow
   Egress: 'true'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '80'
    To: '80'
  
 OutBoundHTTPSNetworkAclEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref NetworkAcl
   RuleNumber: '110'
   Protocol: '6'
   RuleAction: allow
   Egress: 'true'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '443'
    To: '443'
  
 OutBoundResponsePortsNetworkAclEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref NetworkAcl
   RuleNumber: '120'
   Protocol: '6'
   RuleAction: allow
   Egress: 'true'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '1024'
    To: '65535'
 
 RouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref myVPC
   Tags:
    - Key: Application
      Value:
       Ref: AWS::StackId
    - Key: Name
      Value: MyRT
  
 Route:
  Type: AWS::EC2::Route
  DependsOn: AttachGateway
  Properties:
   RouteTableId: !Ref RouteTable
   DestinationCidrBlock: 0.0.0.0/0
   GatewayId: !Ref InternetGateway
 
 Subnet1:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref myVPC
   CidrBlock: 10.0.1.0/24
   Tags:
    - Key: Application
      Value:
       Ref: AWS::StackId
    - Key: Name
      Value: MySubnet1

 Subnet2:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref myVPC
   CidrBlock: 10.0.2.0/24
   Tags:
    - Key: Application
      Value:
       Ref: AWS::StackId
    - Key: Name
      Value: MySubnet2
 
 SubnetRouteTableAssociation1:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   SubnetId: !Ref Subnet1
   RouteTableId: !Ref RouteTable
 
 SubnetNetworkAclAssociation1:
  Type: AWS::EC2::SubnetNetworkAclAssociation
  Properties:
   SubnetId: !Ref Subnet1
   NetworkAclId: !Ref NetworkAcl 
 
 SubnetRouteTableAssociation2:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   SubnetId: !Ref Subnet2
   RouteTableId: !Ref RouteTable
 
 SubnetNetworkAclAssociation2:
  Type: AWS::EC2::SubnetNetworkAclAssociation
  Properties:
   SubnetId: !Ref Subnet2
   NetworkAclId: !Ref NetworkAcl
 
 Ec2Instance1:
  Type: 'AWS::EC2::Instance'
  Properties:
   InstanceType: t2.micro
   ImageId: ami-cf7f47ce #This is Amazon RHEL image on Singapore Region
   Tags:
    - Key: Name
      Value: DBS Mkt Place Car 1
   SecurityGroupIds:
   - Ref: MySecurityGroup
   SubnetId:
    Ref: Subnet1 
 
 Ec2Instance2:
  Type: 'AWS::EC2::Instance'
  Properties:
   InstanceType: t2.micro
   ImageId: ami-cf7f47ce #This is Amazon RHEL image on Singapore Region
   Tags:
    - Key: Name
      Value: DBS Mkt Place Car 2
   SecurityGroupIds:
   - Ref: MySecurityGroup
   SubnetId:
    Ref: Subnet2

 MySecurityGroup:
  Type: 'AWS::EC2::SecurityGroup'
  Properties:
   GroupDescription: Enable SSH access via port 22 and HTTP from port 80
   Tags:
    - Key: Name
      Value: AutomicEc2Sg
   SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0 
    - IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0
   VpcId: !Ref myVPC
 
 MyEip1:
  Type: 'AWS::EC2::EIP'
 IPAssoc1:
  Type: 'AWS::EC2::EIPAssociation'
  Properties:
   InstanceId:
    Ref: Ec2Instance1
   EIP:
    Ref: MyEip1
 MyEip2:
  Type: 'AWS::EC2::EIP'
 IPAssoc2:
  Type: 'AWS::EC2::EIPAssociation'
  Properties:
   InstanceId:
    Ref: Ec2Instance2
   EIP:
    Ref: MyEip2
